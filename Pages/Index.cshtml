@page
@model JobDescriptionAgent.Pages.IndexModel
@{
    ViewData["Title"] = "AI Job Description Generator";
}

<div class="container mt-4">
    <div class="text-center mb-5">
        <h1 class="display-4">AI Job Description Generator</h1>
        <p class="lead">Create professional job descriptions with AI assistance. Our advanced AI will help you craft clear, inclusive, and effective job descriptions.</p>
    </div>

    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow-sm mb-4">
                <div class="card-body">
                    <form method="post" id="jdForm">
                        <div class="mb-4">
                            <label asp-for="JobDescription" class="form-label">Job Requirements</label>
                            <textarea asp-for="JobDescription" class="form-control" rows="5"
                                placeholder="Example: Need a senior backend developer with expertise in .NET Core and microservices..."
                                data-val="true"
                                data-val-required="Please provide job requirements."></textarea>
                            <span asp-validation-for="JobDescription" class="text-danger"></span>
                        </div>
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary btn-lg px-5" id="generateBtn">
                                Generate Description
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="alert alert-danger fade-in" role="alert">
                    @Model.ErrorMessage
                </div>
            }

            @if (!string.IsNullOrEmpty(Model.GeneratedDescription))
            {
                <div class="card shadow-sm fade-in">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Generated Job Description</h5>
                        <button class="btn btn-outline-primary btn-sm" onclick="copyToClipboard()">
                            <i class="fas fa-copy me-2"></i>Copy
                        </button>
                    </div>
                    <div class="card-body">
                        <pre class="mb-0">@Model.GeneratedDescription</pre>
                    </div>
                </div>

                @if (Model.Stages != null && Model.Stages.Any())
                {
                    <div class="accordion fade-in mt-4" id="stagesAccordion">
                        @if (Model.Stages.ContainsKey("clarity"))
                        {
                            <div class="accordion-item">
                                <h2 class="accordion-header">
                                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#clarityCollapse">
                                        Clarification Stage
                                    </button>
                                </h2>
                                <div id="clarityCollapse" class="accordion-collapse collapse show" data-bs-parent="#stagesAccordion">
                                    <div class="accordion-body">
                                        <pre>@Model.Stages["clarity"]</pre>
                                    </div>
                                </div>
                            </div>
                        }

                        @if (Model.Stages.ContainsKey("initial"))
                        {
                            <div class="accordion-item">
                                <h2 class="accordion-header">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#initialCollapse">
                                        Initial Draft
                                    </button>
                                </h2>
                                <div id="initialCollapse" class="accordion-collapse collapse" data-bs-parent="#stagesAccordion">
                                    <div class="accordion-body">
                                        <pre>@Model.Stages["initial"]</pre>
                                    </div>
                                </div>
                            </div>
                        }

                        @if (Model.Stages.ContainsKey("critique"))
                        {
                            <div class="accordion-item">
                                <h2 class="accordion-header">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#critiqueCollapse">
                                        Critique Feedback
                                    </button>
                                </h2>
                                <div id="critiqueCollapse" class="accordion-collapse collapse" data-bs-parent="#stagesAccordion">
                                    <div class="accordion-body">
                                        <pre>@Model.Stages["critique"]</pre>
                                    </div>
                                </div>
                            </div>
                        }

                        @if (Model.Stages.ContainsKey("compliance"))
                        {
                            <div class="accordion-item">
                                <h2 class="accordion-header">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#complianceCollapse">
                                        Compliance Review
                                    </button>
                                </h2>
                                <div id="complianceCollapse" class="accordion-collapse collapse" data-bs-parent="#stagesAccordion">
                                    <div class="accordion-body">
                                        <pre>@Model.Stages["compliance"]</pre>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            }
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.getElementById('jdForm').addEventListener('submit', function(e) {
            console.log('Form submitted');
            const btn = document.getElementById('generateBtn');
            btn.disabled = true;
            btn.value = 'Generating...';
        });

        function copyToClipboard() {
            const description = document.querySelector('pre').textContent;
            navigator.clipboard.writeText(description)
                .then(() => {
                    const toast = document.createElement('div');
                    toast.className = 'toast align-items-center text-white bg-success border-0 position-fixed bottom-0 end-0 m-3';
                    toast.setAttribute('role', 'alert');
                    toast.setAttribute('aria-live', 'assertive');
                    toast.setAttribute('aria-atomic', 'true');
                    toast.innerHTML = `
                        <div class="d-flex">
                            <div class="toast-body">
                                <i class="fas fa-check-circle me-2"></i>Copied to clipboard!
                            </div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                    `;
                    document.body.appendChild(toast);
                    const bsToast = new bootstrap.Toast(toast);
                    bsToast.show();

                    toast.addEventListener('hidden.bs.toast', function () {
                        document.body.removeChild(toast);
                    });
                })
                .catch(err => console.error('Failed to copy text: ', err));
        }
    </script>
} 